<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xdy.dao.StudentDao">
    <!--新增操作   id必须和StudentDao中的方法名称一致-->
    <insert id="addStudent" parameterType="Student">
        /*因为我们的参数是Student对象   所以 values中的值 必须是Student类中的属性*/
        INSERT  INTO  student(age,name)  VALUES (#{age},#{name})
    </insert>
    <!--&lt;!&ndash;-->
      <!--01.数据库字段名和我们实体类属性名不一致   必须使用-->
      <!--02.返回结果是map集合时  必须使用-->
      <!--03.关联映射 以及延迟加载   必须使用-->
    <!--&ndash;&gt;-->
    <!--<resultMap id="studentMap" type="Student">-->
        <!--<id property="id" column="id"/>&lt;!&ndash;只针对于主键的设置&ndash;&gt;-->
        <!--<result property="age" column="age"/> &lt;!&ndash;设置除了主键，集合，对象之外的属性&ndash;&gt;-->
        <!--<result property="name" column="name"/>-->
    <!--</resultMap>-->

    <!--新增操作 会获取我们插入数据的Id
    SELECT @@identity
    SELECT LAST_INSERT_ID()    查询刚插入数据的主键
    -->
    <insert id="addStudentByCache" parameterType="Student">
        INSERT INTO student(age,name)  VALUES (#{age},#{name})
        /**
         order="AFTER"适用于musql数据库
         order="before" 适用于oracle数据库
         */
         <selectKey resultType="int" keyProperty="id" order="AFTER" >
                 SELECT @@IDENTITY
         </selectKey>
    </insert>

    <!--删除操作  传递的是一个Id不是一个对象 所以我们在sql语句中就可以用占位符-->
    <delete id="deleteStudent" parameterType="int">
        DELETE from student where id=#{xxx}
    </delete>

    <!--修改操作 传递的是一个 Student对象-->
    <update id="updateStudent" parameterType="Student">
        UPDATE student SET name=#{name},age=#{age}
        where ID=#{id}
    </update>


    <!--查询所有操作-->
    <select id="seleteAllStudents" resultType="Student">
        SELECT id,age,name from student
    </select>





    <!--查询所有的student  返回值是map-->
    <!--如果我们写的是resultType="map"-->
    <!--那么myBatis在底层会把我们的每个字段当成key-->
    <!--字段对象的值 是value 这样不可行-->
    <!--我们是想把某一个字段当成key-->
    <!--整行数据（对象）当成value-->
    <!--这时候就需要把resultType换成resultMap(结果映射)-->
    <!--myBatis底层会进行拦截ResultSet-->
    <!--然后根据我们在resultMap中的配置-->
    <!--把对应的key和value封装到,map集合中-->
    <select id="selectAllByMap" resultMap="studentMap">
        SELECT id,age,name FROM  student
    </select>

    <!--01.数据库中字段名和我们实体类属性不一致  必须使用-->
    <!--02.返回结果是map集合  必须使用-->
    <!--03.关系应声 以及延迟加载 必须使用-->

    <resultMap id="studentMap" type="Student">
        <id property="id" column="id"/> <!--只针对与主键的设置-->
        <result property="age" column="age"></result> <!--设置除了主键，集合，对象之外的属性-->
        <result property="name" column="name"></result>
    </resultMap>

    <!--根据id查询指定-->
    <select id="selectStudentById" parameterType="int" resultType="Student">
        SELECT id,name,age FROM student WHERE id=#{xxx}
    </select>

    <select id="selectByName" resultType="Student">
        SELECT id,name,age FROM student WHERE name LIKE concat('%',#{xxx},'%')
    </select>

</mapper>